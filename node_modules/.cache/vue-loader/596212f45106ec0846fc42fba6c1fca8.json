{"remainingRequest":"/Users/yaochangfei/xjyt/office_front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yaochangfei/xjyt/office_front/src/view/indexComponents/moble.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yaochangfei/xjyt/office_front/src/view/indexComponents/moble.vue","mtime":1588216834864},{"path":"/Users/yaochangfei/xjyt/office_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yaochangfei/xjyt/office_front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}